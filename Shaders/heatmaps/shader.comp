#version 430
layout(local_size_x = 32, local_size_y = 32) in;
layout(std430, binding = 0) buffer PositionBuffer {
    vec2 positions[];
};

layout(std430, binding = 1) buffer MovementBuffer {
    vec2 movements[];
};
layout(rgba32f, binding = 2) uniform image2D center_heatmap;
layout(rgba32f, binding = 3) uniform image2D repel_heatmap;

void main() {
    vec2 bird_position = positions[gl_WorkGroupID.x];
    vec2 bird_movement = movements[gl_WorkGroupID.x];

    int repel_radius = 8;

    ivec2 screen_position = ivec2(bird_position * ivec2(1920, 1080));
    int blocks = 4;
    for (int i = 1; i <= blocks; i++) {
        for (int j = 1; j <= blocks; j++) {
            ivec2 relative_position = ivec2(gl_LocalInvocationID.xy) * ivec2(i, j) - 16 * blocks;
            ivec2 pixel_position = screen_position + relative_position;
            ivec2 force = -relative_position;

            float speed = length(force);
            if (speed < 16*blocks && pixel_position != screen_position) {
                vec2 added = normalize(force) * (1 - speed/(16*blocks));
                vec2 temp = imageLoad(center_heatmap, pixel_position).xy + added;
                imageStore(center_heatmap, pixel_position, vec4(temp, 0, 1));
                if (speed < repel_radius) {
                    vec2 added = normalize(force) * (1 - speed/repel_radius);
                    vec2 temp = imageLoad(center_heatmap, pixel_position).xy - added;
                    imageStore(repel_heatmap, pixel_position, vec4(temp, 0, 1));
                }
            }
        }
    }
}
