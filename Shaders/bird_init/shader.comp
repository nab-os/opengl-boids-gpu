#version 430
layout(local_size_x = 1, local_size_y = 1) in;

layout(std430, binding = 0) buffer PositionBuffer {
    vec2 positions[];
};

layout(std430, binding = 1) buffer MovementBuffer {
    vec2 movements[];
};

uniform ivec2 grid_size;

float rand(vec2 co) {
    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);
}

void main() {
    vec2 movement = vec2((gl_GlobalInvocationID.x / 20000.0) * 2 - 1, rand(1.89323*gl_GlobalInvocationID.xx) * 2 - 1);
    vec2 second = vec2(rand(1323*gl_GlobalInvocationID.xx) * 2 - 1, rand(gl_GlobalInvocationID.xx / 20000.0) * 2 - 1);
    movement = -reflect(movement, second);
    positions[gl_GlobalInvocationID.x] = vec2(gl_GlobalInvocationID.x / 20000.0, rand(gl_GlobalInvocationID.xx));
    movements[gl_GlobalInvocationID.x] = movement * 0.001;
}
